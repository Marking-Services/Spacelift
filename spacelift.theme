<?php

use Drupal\block\Entity\Block;
use Drupal\Core\Language\LanguageInterface;

/**
 * Implements hook_html_head_alter().
 */
function spacelift_html_head_alter(&$head_elements) {
  // HTML5 charset declaration.
  $head_elements['system_meta_content_type']['#attributes'] = ['charset' => 'utf-8'];

  // Optimize mobile viewport.
  $head_elements['mobile_viewport'] = [
    '#type' => 'html_tag',
    '#tag' => 'meta',
    '#attributes' => [
      'name' => 'viewport',
      'content' => 'width=device-width, initial-scale=1',
    ],
  ];
}

/**
 * Adds interior regions into $variables array
 * @param $variables
 * @param array $includedRegions
 */
function spacelift_set_interior_regions(&$variables, array $includedRegions) {
  $theme = \Drupal::theme()->getActiveTheme()->getName();
  $all_regions = system_region_list($theme, 'REGIONS_ALL');

  $regions = array_intersect(array_keys($all_regions), $includedRegions);

  foreach ($regions as $key => $region) {
    $blocks = \Drupal::entityTypeManager()
      ->getStorage('block')
      ->loadByProperties(['theme' => $theme, 'region' => $region]);

    uasort($blocks, 'Drupal\block\Entity\Block::sort');

    $build = [];
    foreach ($blocks as $blockKey => $block) {
      if ($block->access('view')) {
        $build[$blockKey] = entity_view($block, 'block');
      }
    }

    $variables[$region] = $build;
  }
}

/**
 * Implements hook_preprocess_block().
 */
function spacelift_preprocess_block(&$variables) {
  if ($variables['base_plugin_id'] == 'language_block') {
    $languageManager = \Drupal::languageManager();
    $language = $languageManager->getCurrentLanguage(LanguageInterface::TYPE_CONTENT);

    $variables['current_language'] = $language->getName();
  }

  $block_id = $variables['elements']['#id'];
  $block = Block::load($block_id);

  $variables['region'] = $block->getRegion();
  $variables['id'] = $variables['elements']['#id'];
  $variables['content']['#attributes']['block'] = $variables['attributes']['id'];
}

/**
 * Implements hook_preprocess_commerce_product().
 */
function spacelift_preprocess_commerce_product(&$variables) {
  $variables['view_mode'] = $variables['elements']['#view_mode'];
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function spacelift_theme_suggestions_menu_alter(array &$suggestions, array $variables) {
  // Remove the block and replace dashes with underscores in the block ID to
  // use for the hook name.
  if (isset($variables['attributes']['block'])) {
    $hook = str_replace(['block-', '-'], ['', '_'], $variables['attributes']['block']);

    $suggestions[] = $variables['theme_hook_original'] . '__' . $hook;
  }
}
